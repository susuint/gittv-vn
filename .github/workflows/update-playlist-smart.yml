name: Update IPTV Playlist (SMART Geo-Detection)

on:
  schedule:
    - cron: '0 9,21 * * *'
  
  workflow_dispatch:
    inputs:
      mode:
        description: 'Chế độ chạy (normal/quick/express)'
        required: false
        default: 'normal'
        type: choice
        options:
          - normal
          - quick
          - express

permissions:
  contents: write

concurrency:
  group: playlist-update
  cancel-in-progress: false

env:
  PYTHON_VERSION: '3.11'
  OUTPUT_FILENAME: 'playlist.m3u'

jobs:
  update-playlist:
    name: Generate SMART Geo-Optimized Playlist
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Python with Cache
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      
      - name: Install Dependencies
        run: pip install -r requirements.txt
      
      - name: Configure Run Mode
        run: |
          MODE="${{ github.event.inputs.mode }}"
          if [ "$MODE" == "quick" ]; then
            sed -i 's/CHANNEL_CHECK_TIMEOUT = 6/CHANNEL_CHECK_TIMEOUT = 4/g' iptv_generator_smart_geo.py
            sed -i 's/MAX_CONCURRENT_CHECKS = 120/MAX_CONCURRENT_CHECKS = 150/g' iptv_generator_smart_geo.py
            echo "⚡ Chế độ Quick được kích hoạt."
          elif [ "$MODE" == "express" ]; then
            sed -i 's/CHANNEL_CHECK_TIMEOUT = 6/CHANNEL_CHECK_TIMEOUT = 3/g' iptv_generator_smart_geo.py
            sed -i 's/MAX_CONCURRENT_CHECKS = 120/MAX_CONCURRENT_CHECKS = 180/g' iptv_generator_smart_geo.py
            echo "🚀 Chế độ Express được kích hoạt."
          else
            echo "🔄 Chạy ở chế độ Normal (SMART Geo-Detection Mode)."
          fi
      
      - name: Generate SMART Geo-Optimized Playlist
        run: python iptv_generator_smart_geo.py
      
      - name: Validate New Playlist
        id: validate
        run: |
          if [ ! -f "${{ env.OUTPUT_FILENAME }}" ]; then
            echo "❌ Lỗi: Script không tạo ra tệp playlist.m3u."
            exit 1
          fi
          
          NEW_CHANNELS=$(grep -c "^http" "${{ env.OUTPUT_FILENAME }}" || echo "0")
          if [ $NEW_CHANNELS -lt 30 ]; then
            echo "❌ Xác thực thất bại: Số lượng kênh quá ít ($NEW_CHANNELS)."
            echo "Để bảo toàn chất lượng, lần cập nhật này sẽ bị hủy và giữ lại playlist cũ."
            exit 1
          fi
          
          echo "✅ Playlist mới hợp lệ với $NEW_CHANNELS kênh được tối ưu hóa."
          echo "channels=$NEW_CHANNELS" >> $GITHUB_OUTPUT
      
      - name: Extract Smart Statistics
        id: stats
        run: |
          VN_SERVERS="0"; SG_SERVERS="0"; SMART_FINDS="0"; HIGH_CONF="0"
          if [ -f "iptv_generator.log" ]; then
            VN_LINE=$(grep "VN servers:" iptv_generator.log | tail -1 || echo ""); if [ -n "$VN_LINE" ]; then VN_SERVERS=$(echo "$VN_LINE" | grep -oE '[0-9]+' | head -1 || echo "0"); fi
            SG_LINE=$(grep "SG servers:" iptv_generator.log | tail -1 || echo ""); if [ -n "$SG_LINE" ]; then SG_SERVERS=$(echo "$SG_LINE" | grep -oE '[0-9]+' | head -1 || echo "0"); fi
            SMART_LINE=$(grep "SMART FINDS:" iptv_generator.log | tail -1 || echo ""); if [ -n "$SMART_LINE" ]; then SMART_FINDS=$(echo "$SMART_LINE" | grep -oE '[0-9]+' | head -1 || echo "0"); fi
            CONF_LINE=$(grep "High confidence" iptv_generator.log | tail -1 || echo ""); if [ -n "$CONF_LINE" ]; then HIGH_CONF=$(echo "$CONF_LINE" | grep -oE '[0-9]+' | head -1 || echo "0"); fi
          fi
          echo "vn_servers=${VN_SERVERS}" >> $GITHUB_OUTPUT
          echo "sg_servers=${SG_SERVERS}" >> $GITHUB_OUTPUT
          echo "smart_finds=${SMART_FINDS}" >> $GITHUB_OUTPUT
          echo "high_conf=${HIGH_CONF}" >> $GITHUB_OUTPUT
          echo "📊 Extracted stats: VN=${VN_SERVERS}, SG=${SG_SERVERS}, Smart=${SMART_FINDS}, HighConf=${HIGH_CONF}"

      - name: Generate README from template
        id: generate_readme
        run: |
          UPDATED_TIME=$(date -u +"%Y-%m-%d %H:%M UTC")
          UPDATED_TIME_ENCODED=$(echo "$UPDATED_TIME" | sed 's/ /%20/g')

          # Đọc file template và thay thế các placeholder một cách an toàn
          < README.template.md sed \
            -e "s|__REPO__|${{ github.repository }}|g" \
            -e "s|__CHANNELS__|${{ steps.validate.outputs.channels }}|g" \
            -e "s|__VN_SERVERS__|${{ steps.stats.outputs.vn_servers }}|g" \
            -e "s|__SG_SERVERS__|${{ steps.stats.outputs.sg_servers }}|g" \
            -e "s|__SMART_FINDS__|${{ steps.stats.outputs.smart_finds }}|g" \
            -e "s|__HIGH_CONF__|${{ steps.stats.outputs.high_conf }}|g" \
            -e "s|__UPDATED_TIME_ENCODED__|${UPDATED_TIME_ENCODED}|g" \
            > README.md

      - name: Commit Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔄 SMART Update: ${{ steps.validate.outputs.channels }} channels | VN:${{ steps.stats.outputs.vn_servers }} SG:${{ steps.stats.outputs.sg_servers }} | Smart:${{ steps.stats.outputs.smart_finds }}"
          # Quan trọng: Thêm README.template.md vào file_pattern để commit lần đầu
          file_pattern: "${{ env.OUTPUT_FILENAME }} README.md iptv_generator.log README.template.md"
          commit_user_name: IPTV Smart Bot
          commit_user_email: fan7gi@gmail.com
